#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

timezone="$(cat /etc/timezone)"

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" --keep=".env venv mediafiles"

	chmod -R o-rwx "$install_dir"
	chown -R $app:www-data "$install_dir"
fi

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..." --weight=1

# Install Nodejs
ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

# Create a dedicated systemd config
ynh_add_systemd_config

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

yunohost service add $app --description="Smart recipe management" --log="/var/log/$app/$app.log"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

#ynh_add_config --template=".env.template" --destination="$install_dir/.env"

# FIXME: this should be handled by the core in the future
# You may need to use chmod 600 instead of 400,
# for example if the app is expected to be able to modify its own config
#chmod 400 "$install_dir/.env"
#chown $app:$app "$install_dir/.env"

version=$(ynh_app_upstream_version)

ynh_add_config --template="version.py" --destination="$install_dir/recipes/version.py"
chmod 400 "$install_dir/recipes/version.py"
chown $app:$app "$install_dir/recipes/version.py"

#=================================================
# SPECIFIC UPGRADE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then

	ynh_script_progression --message="Upgrading dependencies via pip..." --weight=4
	pushd "$install_dir"
		ynh_exec_warn_less ynh_exec_as $app "$install_dir/venv/bin/pip3" install -r requirements.txt
	popd

	ynh_script_progression --message="Running migrations and generatic static files..." --weight=2
	pushd "$install_dir"
		# load environment variables
		export $(cat "/var/www/$app/.env" |grep "^[^#]" | xargs)
		ynh_exec_as $app "$install_dir/venv/bin/python3" manage.py migrate
		ynh_exec_as $app "$install_dir/venv/bin/python3" manage.py collectstatic --no-input 
		ynh_exec_as $app "$install_dir/venv/bin/python3" manage.py collectstatic_js_reverse 
	popd

	ynh_script_progression --message="Building frontend..." --weight=5
	pushd "$install_dir/vue"
		ynh_use_nodejs
		yarn install
		yarn build
	popd
fi

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
