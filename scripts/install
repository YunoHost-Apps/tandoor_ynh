#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

version=$(ynh_app_upstream_version)
timezone="$(timedatectl show --value --property=Timezone)"
secretkey=$(ynh_string_random --length=12)
ynh_app_setting_set --key=secretkey --value="$secretkey"

redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --key=redis_db --value=$redis_db

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing NodeJS..."

ynh_nodejs_install

#=================================================
# CREATE A PostgreSQL DATABASE
#=================================================
ynh_script_progression "Configuring a PostgreSQL database..."

ynh_psql_db_shell <<< "GRANT ALL PRIVILEGES ON DATABASE $db_name TO $db_user;"
ynh_psql_db_shell <<< "ALTER DATABASE $db_name OWNER TO $db_user;"
ynh_psql_db_shell <<< "ALTER USER $db_name WITH SUPERUSER;"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir"

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

ynh_config_add --template=".env" --destination="$install_dir/.env"

ynh_config_add --template="version.py" --destination="$install_dir/recipes/version.py"

#=================================================
# SPECIFIC SETUP
#=================================================
ynh_script_progression "Installing $app..."

if [ $YNH_ARCH == "armhf" ] || [ $YNH_ARCH == "armel" ]
then
# Install rustup if not already installed
# We need this to be able to install cryptgraphy on ARM hardware
export PATH="$PATH:$install_dir/.cargo/bin:$install_dir/.local/bin:/usr/local/sbin"
    if [ -e $install_dir/.rustup ]; then
    ynh_exec_as_app PATH=$PATH rustup update
    else
    ynh_exec_as_app bash -c 'curl -sSf -L https://static.rust-lang.org/rustup.sh | sh -s -- -y --default-toolchain=stable --profile=minimal'
    fi
fi

pushd "$install_dir"
    ynh_script_progression "Building backend..."
    ynh_exec_as_app python3 -m venv --upgrade "$install_dir/venv"
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/pip" install --upgrade pip
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/pip" install -r requirements.txt --no-cache-dir

    ynh_safe_rm "$install_dir/.cache/pip"
popd

pushd "$install_dir"/vue3
    ynh_script_progression "Building frontend..."
    export NODE_ENV=production
    ynh_hide_warnings ynh_exec_as_app yarn install
    ynh_hide_warnings ynh_exec_as_app yarn build
    ynh_hide_warnings ynh_exec_as_app yarn autoclean --init
    ynh_hide_warnings ynh_exec_as_app yarn autoclean --force
popd

pushd "$install_dir"
    set -o allexport
    source "$install_dir/.env"
    set +o allexport
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/python" manage.py migrate
    ynh_psql_db_shell <<< "ALTER USER $app WITH NOSUPERUSER;"
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/python" manage.py collectstatic --no-input
popd

#=================================================
# CONFIGURE DATA DIRECTORY
#=================================================
ynh_script_progression "Configuring a data directory..."

setfacl --recursive --modify g:$app:rwX,g:www-data:rwX,d:g:www-data:rwX "$data_dir"

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd
yunohost service add "$app" --description="Smart recipe management" --log="/var/log/$app/$app.log"

ynh_config_add_logrotate

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="$app" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
