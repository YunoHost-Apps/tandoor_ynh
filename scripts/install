#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

secretkey=$(ynh_string_random --length=12)
ynh_app_setting_set --key=secretkey --value="$secretkey"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression "Installing NodeJS..."

ynh_nodejs_install

#=================================================
# CREATE A PostgreSQL DATABASE
#=================================================
ynh_script_progression "Configuring a PostgreSQL database..."

ynh_psql_db_shell <<< "GRANT ALL PRIVILEGES ON DATABASE $db_name TO $db_user;"
ynh_psql_db_shell <<< "ALTER DATABASE $db_name OWNER TO $db_user;"
ynh_psql_db_shell <<< "ALTER USER $db_name WITH SUPERUSER;"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R "$app:www-data" "$install_dir"
#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

ynh_config_add --template="dot_env" --destination="$install_dir/.env"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/.env"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown "$app:$app" "$install_dir/.env"

version=$(ynh_app_upstream_version)

ynh_config_add --template="version.py" --destination="$install_dir/recipes/version.py"

chmod 400 "$install_dir/recipes/version.py"
chown "$app:$app" "$install_dir/recipes/version.py"

#=================================================
# SPECIFIC SETUP
#=================================================
ynh_script_progression "Building frontend..."
_tandoor_build_frontend

ynh_script_progression "Installing Tandoor and its python dependencies..."
_tandoor_venv_install

ynh_script_progression "Running migrations and generating static files..."
pushd "$install_dir"
    (
        source "$install_dir/.env"
        ynh_exec_as_app "$venvpy" manage.py migrate
        ynh_psql_db_shell <<< "ALTER USER $app WITH NOSUPERUSER;"
        ynh_exec_as_app "$venvpy" manage.py collectstatic --no-input
        ynh_exec_as_app "$venvpy" manage.py collectstatic_js_reverse
    )
popd

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd
yunohost service add "$app" --description="Smart recipe management" --log="/var/log/$app/$app.log"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start" --log_path="systemd"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
