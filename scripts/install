#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

secretkey=$(ynh_string_random --length=12)
timezone="$(cat /etc/timezone)"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=secretkey --value=$secretkey

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=3

# Install Nodejs
ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

#=================================================
# CREATE A PostgreSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a PostgreSQL database..." --weight=1

ynh_psql_execute_as_root --sql="GRANT ALL PRIVILEGES ON DATABASE $db_user TO $db_user;"
ynh_psql_execute_as_root --sql="ALTER DATABASE $db_user OWNER TO $db_user;"
ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH SUPERUSER;"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

ynh_add_systemd_config

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

yunohost service add $app --description="Smart recipe management" --log="/var/log/$app/$app.log"

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template=".env.template" --destination="$install_dir/.env"
chmod 400 "$install_dir/.env"
chown $app:$app "$install_dir/.env"

version=$(ynh_app_upstream_version)

ynh_add_config --template="version.py" --destination="$install_dir/recipes/version.py"
chmod 400 "$install_dir/recipes/version.py"
chown $app:$app "$install_dir/recipes/version.py"

#=================================================
# SPECIFIC SETUP
#=================================================
ynh_script_progression --message="Setting up Tandoor venv..." --weight=1

if [[ $(ynh_get_debian_release) == "bullseye" ]]; then
	py_app_version="python3"
else
	myynh_install_python --python="$py_required_version"
fi

ynh_exec_as $app $py_app_version -m venv "$install_dir/venv"

#REMOVEME? ynh_script_progression --message="Installing dependencies via pip..." --weight=4
pushd "$install_dir"
	ynh_exec_warn_less ynh_exec_as $app "$install_dir/venv/bin/pip3" install -r requirements.txt
popd

ynh_script_progression --message="Building frontend..." --weight=5
pushd "$install_dir/vue"
	ynh_use_nodejs
	ynh_exec_warn_less yarn install
	ynh_exec_warn_less yarn build
popd

ynh_script_progression --message="Running migrations and generating static files..." --weight=2
pushd "$install_dir"
	# load environment variables
	export $(cat "/var/www/$app/.env" |grep "^[^#]" | xargs)
	ynh_exec_as $app "$install_dir/venv/bin/python3" manage.py migrate
	ynh_psql_execute_as_root --sql="ALTER USER $app WITH NOSUPERUSER;"
	ynh_exec_as $app "$install_dir/venv/bin/python3" manage.py collectstatic --no-input 
	ynh_exec_as $app "$install_dir/venv/bin/python3" manage.py collectstatic_js_reverse 
popd

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
